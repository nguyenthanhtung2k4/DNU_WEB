################################### CÁC  TRANG WEB LIÊN QUAN ĐẾN CSS,  HTML
WEB-CHECK-CANIUSE: https://caniuse.com/ 
>>>>>>>>>>>>>>>>> DÙNG ĐỂ CHECK  CÁC THUỘC TÍNH CSS CÓ HỖ TRỢ TRÊN  CÁC TRÌNH DUYỆT KHÔNG
>>>>>>>>>>>>>>>> LINK  THAM KHẢO: https://youtu.be/HENp_O2-poM?si=2sY8qb8WKsxwJnFv
###################################CÁC THUỘC TÍNH CSS
* :  Là toàn bộ code của soure đó 
ID= .{tên id}
CLAAS= #{tên_claas}
@supports  >>> đây là thuộc tính dùng để check  web mào có hỗ trợ hay  không
:root     >>>> Thuộc tính này là dùng để đặt biến  .
@media    >>>> Nó sẽ điều chỉnh lại  nếu kích thước bé hơn nó sẽ thay đổi : màu sắc , kích  thức ,  backgroud....
               vd:
                    body{
                         background-color: black;
                         color: white;
                    }
                    @media screen and (max-width: 1000px){
                         body{
                              background-color: aqua;
                              color: black;
                         }
                    }
               * thiết  bị : max-width: 320px chiều dọc di động
                                        480px chiều ngang điện thoại  di động

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
# thuộc tính  support:
vd : nếu trình duyệt hỗ trợ thuộc tính ta có thể dùng--> supporrt
 font: 100px;
                    bg.{
                         font-weight: bold;
                         display: inline-block;
                         margin-top: 400 px;
                         margin-left: 500px;
                         color: transparent;
                    } 
                    @support(-webkit-background-clip: text;){
                          background-image: linear-gradient(to  right bottom , rgb(6, 234, 52), rgb(206, 2, 2));
                         -webkit-background-clip: text;
                         background-clip: text;
                         text-transform: uppercase;
                    }     
     link tham khảo: https://youtu.be/HENp_O2-poM?si=2sY8qb8WKsxwJnFv
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
# thuộc tính root: tính năng đặt biến
          vd: 
          :root{
               --tung-color:  blue;
               --tungphu-color: red;
          }
          .thanhtung{
               color: var(--tung-color)
          }
     ==>  Nó sẽ giúp ta thay  đổi các màu chủ đảo của các tổng thể 1 trang web 1 cách dễ dàng hơn 
          TỪ ĐÓ SẼ GIÚP TA THAY  ĐỔI 1 CÁCH ĐƠN GIẢN HƠN.
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
# thuộc tính : rounded : 
>>>> thuộc tính này làm để copy class khác sang class mới của mình:
               vd:
               {tên_class_cũ}  {tên_claas_mới} --rounded{ {các_thuộc_tính_của_nó} }
>>> Như zậy  claass ms nó sẽ lấy lại  các thuộc tính cũ +  thuộc tính ms vào class mới
>>> link-tham-khảo: https://youtu.be/cS24rcEbnGM?si=53faeJ1NDv5-Iv1f
                    (đoạn  3:56)
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
# THUỘC TÍNH COLER
     color: red /// kiểu này là color
     color: rgb(0,0,0) // này là chọnh màu theo  rgb(viết tắt là red grend blue )
     color: rgba(0,0,0,0.5) //  như này nó sẽ giảm đi  độ sáng của màu
     color: #ffa400 // như này là kiểu màu hex 
     link tham khảo thêm: https://www.w3schools.com/css/css_colors.asp
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
# THUỐC TÍNH BACKGROUND :
                         - Khi ta dùng css để cho  back  ground ta nên  thêm width  vs height ( Để xét độ rộng và chiều cao của nó)
                              background-color: {tên_màu_}
                         -Thêm ảnh vào background:
                              background-image: url("{link_ảnh}")  ===> Hiên thị hình nền 
                              background-position: center center  ==> nó sẽ làm ảnh  để ở giữa
                                                  top            ==> Nó sẽ làm ảnh lùi lên trên
                                                  bottom         ==> Nó sẽ làm ảnh lùi xuống dưới
                                                  left           ==> Nó sẽ làm ảnh lùi ra bên trái
                                                  right          ==> Nó sẽ làm ảnh lùi ra bên phải
                                                  50% 50%        ==> Nó sẽ làm anh ở chính giữa
                                                  ta cũng có thê kết hợp :  top bottom  lại  với nhau và lệnh khác cũng có thể kết hơpej với nhau
                              backgroud-size: cover    ==> Phủ kín nền ở web (NẾU ẢNH QUÁ BÉ NÓ SẼ BỊ LẶP) 
                                             contain   ==>  phủ kín kích thước của một thẻ nào nó 
                                             auto     ==> Nó sẽ tự động làm ảnh sao cho phủ hết trên web ( vẫn có thể sdi chuyển ảnh được trên web nếu anh đó to)
                                        *Ngoài ra ta cũng có thể dùng các lệnh  như px, % .... 

                              backgroud-repeat: no-repeat ==> Nó sẽ lấy ảnh đúng vị trí chính xác của nó và không kèm theo  ảnh khác đè lên chính nó
                         background-attachment: fixed; ==> Làmảnh đứng yên không di chuyển theo  thanh cuộn xuống
          ==> Ta cũng có thể viết tắt các thuộc tính bằng cách:
                         vd:  viết ngắn gọn: 
                         background: url('https://th.bing.com/th/id/R.1a496e77b81bace0f6dcd2f4e5026263?rik=WOuKDUqJqV1jFw&riu=http%3a%2f%2fflash24.co.kr%2fg4%2fdata%2fmw.cheditor%2f2206%2f9DqzlUaqHVX28HBlvkPlsJdxG.jpg&ehk=j5Mcc9DqEUC5mQzQFgi4MaVZJjoe6j7IyhlYuoaR2JI%3d&risl=&pid=ImgRaw&r=0') no-repeat center center / cover;
          ////////////////////////////////////////////////////////////////////////////
                              width: (tính bằng px hoặc %)
                              hight: (tính bằng px hoặc %)
          - dùng với width  và hight (chiều dài và  rộng  của backgroud)
////////////////////////////////////////////////////////////////////////////
#Phối tỷ lệ màu với nhau: radial-gradient
     vd: CSS
          .body{
                    background: rgb(2,0,36);
                    background: radial-gradient(circle, rgba(2,0,36,1) 10%, rgba(41,87,97,1) 100%, rgba(26,9,121,1) 100%);
          }
          ==> link tham khảo :https://www.w3schools.com/css/css3_gradients_radial.asp
////////////////////////////////////////////////////////////////////////////
#gradient (Nó sẽ mix các màu lại  với nhau cho  đẹp  hơn)
     -CÂU  LỆNH SỬ DỤNG  GRADIENT>>>>  linear-gradient(to  right bottom, {màu}, màu)
                    vd css:
                                        .bg{
                                                  width: 100px; height: 100px;;
                                                  background-image: linear-gradient(to left top ,red,blue);  
                                             }
                    
                    VD css( Dùng gradient làm mở ảnh background ):
                                        bg.{
                                             background-image: linear-gradient (to left top,red{RGB} , blue{RGB} ),url('{link_anh}');
                                        }
                                   >>>>> Sau khi  gradient vào background  ta sẽ có  được ảnh nền và màu xác đè lên với nhau.
          
                         * Lưu Ý:  Nếu ta dùng bg đề nên ta phải dùng bảng màu (GRB) mới được.

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
# SỬ LÝ HÌNH ẢNH:
     object-fix: cover ; >>>> làm ảnh không bị  méo ,  phủ kín ảnh
     object-position: >>>  muôn hoeenj thị hình ảnh nui  lên phía trên hay  lui  xuống dưới:
                         trên :  top; phải : right ; dưới: bottom ; trái: lenght 
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
# SỬ LÝ  ẢNH LÀM MỜ ĐI:
     fillter: blur(5px);                     ==>  Làm ảnh mờ đi 
     filter: brightness(200%);               ==> Làm ảnh sáng
     filter: contrast(200%);                 ==> Làm ảnh đậm
     filter: drop-shadow(8px 8px 10px gray); ==> ảnh đạm tối
     filter: grayscale(100%);                ==> ảnh đen trắng
     filter: hue-rotate(90deg);
     filter: invert(100%);
     filter: opacity(30%);
     filter: saturate(8);
     filter: sepia(100%);
     filter: contrast(200%) brightness(150%);

               LINK  THAM KHẢO- TEST: https://www.w3schools.com/cssref/playdemo.php?filename=playcss_filter
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
# THUỘC TÍNH OVERFLOW
     overflow: hidden (nó sẽ làm ẩn đi các khoảng text  bị thừa ra bên ngoài)
     overflow: scroll (Nó sẽ tạo ra thanh cuộn )
     overflow: auto (Giá autotrị tương tự như scroll, nhưng nó chỉ thêm thanh cuộn khi cần thiết)
     ==> auto== scroll
     ==> ngoài ra nó còn có overflow-x ; overflow-y (x: rộng ;  y là dài)
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#scroll-behavior : Hiệu ứng cuộn thanh cuộn xuống 
                     scroll-behavior: smooth ===> Làm mượt mà và cuộn cho  đẹp hơn 
                                      auto   ===> Hiệu ứng cuộn nhẩy thẳng ra trang muốn
                                      initial===> Mặc định  
                                      inherit==> Kế thừa thuộc tính từ phần tử cha của nó
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

vd:
                    -----------------CSS------------------------
                    .background {
                    background-color: rgb(145, 95, 95);
                    width: 100px;
                    height: 100px;
                    overflow: hidden;
                    overflow: scroll;
                    }
                    -----------------------HTML------------
                    <div class="background">
                         <p>Lorem ipsum, dolor sit amet consectetur adipisicing elit. Illo rem quo, aut, exercitationem reprehenderit cumque ratione minus laudantium obcaecati nobis vero praesentium facilis culpa et delectus tenetur, maxime quod eum? Lorem ipsum dolor, sit
                              amet Lorem ipsum dolor sit amet consectetur adipisicing elit. Quibusdam et temporibus nobis quam nisi quasi corporis, similique, qui alias modi eligendi beatae omnis praesentium repellendus a maxime doloremque voluptatem nostrum. consectetur
                              adipisicing elit. Nobis nemo illo aperiam aliquid aliquam ex, eveniet ullam sequi exercitationem asperiores commodi? Vero voluptatum iure aut voluptatibus molestias qui culpa officiis. lo
                         </p>
                    </div>
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#THUỐC TÍNH MIN-MAX :
- min  là nhỏ và max là lớn
vd: min và max
---------------------CSS------------------
                    .background {
                    background-color: rgb(145, 95, 95);
                    max-width: 400px;
                    max-height: 200px;
                    overflow: hidden;
                    overflow: auto;
                    }

                    .background {
                    min-height: auto;
                    max-width: auto;
                    }
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#THUỘC TÍNH  EM  VÀ REM: THAM KHẢO TRONG FILE CÓ TÊN :tk_Su_Khac_nhau_EM_REM.txt
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#THUỘC TÍNH BORDER: 
     border :5px             >>>> kích thước đường viền
     border-solid            >>>> làm đường viền
     borger-color: {tên_màu} >>>>  thuộc tính sẽ làm thay đổi màu  đường viền
     border: 1px solid black; dùng để làm viền màu đen (Dòng này là viết tắt cho 3 dòng trên)

				border-collapse: collapse;> dùng để làm mất đi  viền to
				border-radius>:10px ; Dùng để làm bo tròn các viền  bên ngoài bảng( CHỈ NẰM TRONG td,th)
				border-dotted : dùng để là chấm chấm các viền 
				border-dashed : dùng cho chấm chấm hình ứng
				border-solid : dùng cho viền đậm động
				border-double : dùng cho viền đôi đậm đôi
				border-groove : dùng cho viền đôi đậm đôi
				border-ridge : dùng cho viền đôi nhạt đôi
				border-outset : dùng cho viền bên đậm bên  nhạt 
				border-none: không hiện bảng 
				border-hidden : giá trị rỗng ,không hiện viền
				outline== solid : giong nhu solid     
==> NGOÀI RA TA CŨNG CÓ THỂ DÙNG CÁC KIỂU NHƯ: px,% : để thay đổi các thuộc tính của nó (THAM KHAO FILE: tk_Su_Khac_nhau_EM_REM.txt)

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#THUỐC TÍNH MARGIN: Hiểu 1 cách đơn giản thì margin là để cho  ta cách TẠO KHOẢNG TRỐNG BÊN NGOÀI của 1 thẻ nào đó
MARGIN  CÓ THỂ DÙNG DẤU ÂM (vì nó ở bên ngoài)
vd:
          .margin{
               background-color: red       ;
               width:  10rem;
               height:  10rem;
               //left+right=auto==>center//
               margin-left: auto;
               margin-right: auto ;
               // Ta cũng có thể dùng ==> center  bằng cách sau// 
               margin: 0 auto
          }
vd:
          .margin{
               background-color: red       ;
               width:  10rem;
               height:  10rem;
               //  khối  đó  sẽ cách sang bên phải
               margin-left: auto;
          }
vd: 
          .margin{
               background-color: red       ;
               width:  10rem;
               height:  10rem;
               // Nó sẽ cách phía trên 100px//
               margin-top: 100px;
          }
==> NGOÀI RA TA CŨNG CÓ THỂ DÙNG CÁC THẺ KHÁC NHƯ  CÁCH KHOẢNG CÁCH BÊN TRÊN -DƯỚI , BÊN TRÁI-PHẢI 
nó cũng có những nhược điểm như:  nếu như bạn  xét 2 thẻ cùng 1 khoảng cách bên trên mà 2 gtri khac nhau
thì nó sẽ lấy giá trị  nào  cao  nhất. 
===> LINK THAM KHAO: https://www.youtube.com/watch?v=pkAmKB9CaHs&list=PLd8OdiciAE1SwMCtd6XgYp-ei1or6sb1r&index=21

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#THUỘC TÍNH PADDING: Hiểu 1 cách đơn giản là TẠO KHOẢNG TRỐNG BÊN TRONG
PADDING : KHÔNG ĐƯỢC DÙNG DẤU ÂM(Vì nó nằm ở bên trong)
- Nó làm giống như margin  các giá trị  cũng như  vậy
- cũng có các giá trị như top, right, bottom,heght  <==> trên ,phải, dưới, trái

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#BOX-SIZING : dùng để làm cho kích thước border và padding cho chuẩn xác hơn
chúng ta có thể dùng box-sizing:border-box; để tự động áp dụng sao cho  các kích thước mik đặt như mong muốn
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
# DISPLAY: Dùng để xác định hiển thị các phần tử trong HTML và mỗi giá trọ đại diện cho các phần tử khác nhau :
     block     : Đối tượng có kích thước rộng bằng với phần tử cha, chiếm toàn bộ chiều rộng của dòng, và sẽ tự động xuống dòng khi phần tử tiếp theo xuất hiện. 
          Ví dụ: div, p, h1, h2, ul, li,…
          ==> Tự  đọng  xuống dòng sau  phần tử  va song thẳng hàng với thẻ  bên trên 
               >> có khai  báo được chiều rộng  và chiều cao.
     inline    : Đối tượng có kích thước chỉ bằng với nội dung của phần tử, không thể chỉnh sửa kích thước, vị trí và định dạng. 
          Ví dụ: span, a, img,…
          ==>>  giúp các phần tử sau  đó nằm trền cùng 1  dòng 
               >> không thể khai báo chiều dài chiều rộng
     inline-block: Đối tượng có kích thước như một khối, nhưng lại hiển thị như một nội tuyến. 
          Ví dụ: input, button,…
          ==> inline-block  sẽ giúp ta thay đôỉ được kích thước dài rộng 
     list-item :  Nó giống như thẻ <ul><li> 
     flex: làm cho các phần tử div chạy  theo  chiều ngang và làm  căn song song với nhau  
     none: Đối tượng không hiển thị. Ví dụ: script, style,… 
vd: 
div {
     display : block}
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#  CÁC THUỘC TÍNH  FONRT :
     color:transparent            >> Dùng để làm cho nó không có màu gì hết
     vd:
                    .text_trans   {
                                        font: 100px;
                                        font-weight: bold;
                                        background-image: linear-gradient(to  right bottom , rgb(6, 234, 52), rgb(206, 2, 2));
                                        display: inline-block;
                                        margin-top: 400 px;
                                        margin-left: 500px;
                                        color: transparent;
                                        -webkit-background-clip: text;
                                        background-clip: text;
                                        text-transform: uppercase;

                                   }  
     >>>>>>>>>>>>>>>>>>>>>>>>> Nó sẽ làm cho  chữ mix nhiều màu lại  vs nhau

     font-family phong chu 
     font-size :  kich co (%)
     justify : căn chỉnh ở hai  bên
     text-align : can chinh chu
                    (trai left;  giua: center ; phai: right; căn đều 2 bên: justify)
	font-weight: dùng để ghi  chữ in đâm (font-weight: bold :IN ĐẬM CHỮ ; font-weight: 900 :DÙNG ĐỂ LÀM TO CHỮ  )
	font-style: muốn in nghiên thì dùng (font-style:italic)
	line-height: 2 ==>  dùng để cách khoảng trống chỗ các văn bản  khi xuống dòng với nhau .
	letter-spacing : khoảng cách các kí tự sẽ cách  xa nhau  hơn (2px..)
     word-spacing   : Khoảng cách giữa các từ (2px 3p ... )
     word-break: break-all : Nó sẽ làm rớt chữ xuống dòng nếu QUÁ DÀI- rớt kí tự
     word-break: break-all : Nó sẽ làm rớt chữ xuống dòng nếu chứ QUÁ DÀI - rớt các chữ cái

     white-space: nowrap ; >>>>>> Tất cả các chữ  nằm trên cùng 1 dòng
     overflow : hidden ; >>>>>>>> Nó sẽ ẩn đi  nếu kí tự (white-space quá dài )
     text-overflow :ellipsis ; >> Nó sẽ hiện thị dấu 3 chấm .... trên 1 hàng. Khi  dùng overflow
     
     text-transform : thuộc tính làm để in đâm , in thường các chữ
				(text-transform: uppercase; IN ĐẬM TOÀN BỘ;)
				(text-transform: lowercase ;IN TOÀN BỘ THƯỜNG) 
				(text-transform: capitalize;IN CHỮ CÁI ĐẦU TIÊN)
	tetx-shadow : hiệu ứng bóng độ(tetx-shadow: CHIỀU CAO px, BÊN PHẢI px, BÊN DƯỚI px, TÊN  MÀU )
	
     focus : Trạng thái phần từ khi đang được nhập  giữ liệu vào input
     outline: none loại  bỏ đường viền
     

	text-direction: none; :dùng để bỏ gạch chân dưới đường link
                    line-through
                    overline
                    underline
                    underline overline
     text-visited:{màu bạn muốn}  khi nhấn vào  và thoát ra nó sẽ hiện link đó màu khác 
==> NGOÀI RA TA CŨNG CÓ THỂ DÙNG CÁC KIỂU PHÔNG CHỮ Ở TRANG WEB:
LINK THAM KHẢO:  https://fonts.google.com/
LNK THAM KHẢO : https://youtu.be/d8BrZ12XCXA?si=jqjhUy6GyHQvS6_t


//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#pseudo : tính năng nhấp chuột và đổi màu .....
     :hover{ color:{màu_của_bạn} } >>>  nó sẽ làm cho khi  ta di chuyển vào nó sẽ đổi màu
     :active { color:{màu_của_bạn} } >>> Khi  ta nhấn vào thì nó sẽ đổi màu
     :visited{ color:{màu_của_bạn} } >>> Khi ta nhấn vào rồi nó chuyển sang trạng thái một màu khác
vd css:
                              .tung:hover{ 
                                   background-color: yellow;
                                   color: red;
                              }
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
# cursor :  tính năng này làm cho thuộc tính điều chỉnh con trỏ 
vd:  css 
cursor: pointer; >>>> khi ta chỏ vào nó sẽ xuất hiện  hình ngón tay.
>>>>> Còn rất nhiều các thuộc tính khác nữa.
link  tham khảo:https://www.w3schools.com/cssref/pr_class_cursor.php
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#thuoc tinh: opacity {Làm giảm các màu sắc}
          ===>  Thuộc tính này làm  có chiếm diện  tích
#thuoc tinh :  visibility: {Làm ẩn đi các khối block  nhưng vẫn chiếm diện  tích}

==>>> Hai thuộc tính này gần giống nhau  khác nhau  một chút.  T
Tham khảo thêm ở đây: https://youtu.be/wBycAaQpBtI?si=6ZcN_shi1QH8eRrV
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
# box-shadow:Hiệu ứng làm bóng mờ 
     - box-shadow: Là dành cho  1 khối 
     >> cũng có thể dùng bõ shadow[inset] <x> <y><color> ==>>> để nằm bên trong hộp              
     - box-shadow: Là dành cho text
     shadow: {x : y : blur ; scale ; color}
          x:  la  phải trái 
          y:  là trên dưới 
          blur: là độ mờ
          scale: kích thước bóng  đó
          color: màu của bóng đó

                    Vd: box-shadow
                         .tung{
                              box-shadow: 1px 2px 3px 5px blue ;
                         }
                    Vd: shadow
                         .tung{
                              box-shadow: inset 0px 0px 4px red;
                         }
     ==>  text-shadow: Cũng dùng như vậy
     tham khảo: https://youtu.be/77_A9Q819MM?si=SFboM-tGYXIcQeXK
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
user-select: none | auto | text | contain | all;
            ===> Giúp  can thiệp vào các text
               user-select: none --> không cho  người dùng copy
                          : auto --> tùy thuộc 
                          : text --> Cho phép người dùng chọn và sao chép văn bản, nhưng không cho phép chọn các phần tử khác như hình ảnh.
                          : all  --> Cho phép người dùng chọn và sao chép cả văn bản và các phần tử khác.
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
# child selector : Dùng để thay đổi màu... thay đổi thuộc tính{cùng tên}cùng một lúc với nhau
     CHILD  CÓ THỂ DÙNG KHI CÁC PHẦN TỬ CÙNG CẤP VỚI NHAU.

               first-child :  Thay đổi thuộc Tính đầu tiên
               last-child  :  Thay đổi thuộc tính cuối tùng
               nth-child{số_muốn_thay_đổi}   :  Thay đổi thuôc tính thứ 2 {tính từ trên xuống} 
               nth-last-child(2)             : Thay đổi thuộc tính {thứ2 từ dưới lên}
               ==>  Nếu như bạn không muônd thay  đổi 1 cái còn tất cả thuộc tinhds{cùng tên} thay đổi thì ta dùng:
                    not(first-child)
                    not(last-child)
               ==>  Ngoài ra ta cũng có thể thay  đổi  các thuốc tính bằng số chẵn , lẻ :
                    nth-child(odd) ==>  odd:  là số lẻ
                    nth-child(even) ==> even: là số chẵn
               ==>  Cũng có thể dùng bằng thuộc tính n+ tăng dần các phần tử
                    nth-child(2n+1) ==> n chạy bắt đầu từ 0 ,  tăng dần dần
          vd bằng css:
                         tung:first-child{
                              color:  red;
                         }
                         tung:last-child{
                              color: yerlow;
                         }
                         tung:nth-child(2){
                              color:  blue;
                         }
                         tung:not(:fisrt-child){
                              color: red;
                         }
                         tung:nth:child(odd){
                              color: brow;
                         }
          ===> tham khỏa thêm:https://youtu.be/DZbTkRaKzdo?si=Vm1a9PrANjaNMksN
===> LƯU Ý:  KHI  TA DÙNG CHILD- NÓ CÓ MỘT VẤN ĐỀ NHƯ SAU NẾU TA DÙNG:
               - NÓ SẼ TÍNH TỪ TRÊN XUỐNG DƯỚI NẾU TA THÊM  THỂ KHÁC LÊN TRƯỚC NÓ , THÌ NÓ SẼ KHÔNG HOẠT ĐỘNG
               VD:
                    <ul>
                       <p>tung1
                       <li>tung2
                    </ul>
               ==> Như vậy thì ta dùng last-child nó sẽ không hoạt động bởi vì nó 
               có <p>  đứng trước nên  nó k thể hoạt động.{tham khỏa thêm  các thuộc tính child phía trên}
===>  Chính vì vậy để code không bị  lỗi ta có thể dùng thuộc tính {type} ở phía dưới:

#thuoc tinh type: THAY  ĐỔI CÁC CÁC CSS  CỦA MỘT THUỘC TÍNH 

               first-of-type :  Thay đổi thuộc Tính đầu tiên
               last-of-type  :  Thay đổi thuộc tính cuối tùng
               nth-of-type{số_muốn_thay_đổi}   :  Thay đổi thuôc tính thứ 2 {tính từ trên xuống} 
               nth-last-of-type(2)             : Thay đổi thuộc tính {thứ2 từ dưới lên}
               ==>  Nếu như bạn không muônd thay  đổi 1 cái còn tất cả thuộc tinhds{cùng tên} thay đổi thì ta dùng:
                    not(first-of-type)
                    not(last-of-type)
               ==>  Ngoài ra ta cũng có thể thay  đổi  các thuốc tính bằng số chẵn , lẻ :
                    nth-of-type(odd) ==>  odd:  là số lẻ
                    nth-of-type(even) ==> even: là số chẵn
               ==>  Cũng có thể dùng bằng thuộc tính n+ tăng dần các phần tử
                    nth-of-type(2n+1) ==> n chạy bắt đầu từ 0 ,  tăng dần dần
          ==>  Ví  dụ  css  giống  phần child bên trên
==> KHI TA SỬ DỤNG  CÁC PHẦN TỬ TYPE  NÓ  SẼ DỄ DÀNg THAY  ĐỔI ĐƯỢC CÁC PHẦN TỬ CÙNG CẤP HƠN.
NGOÀI RA CŨNG CÓ THỂ THÊM CÁC PHẦN TỬ KHÁC CÙNG CẤP MÀ KHÔNG SỢ  BỊ LỖI CODE 

~ lỜI KHUYÊN:  Chúng ta nên dùng  type để thay  đôit các phần tử cùng cấp một cách  nhanh nhất.


/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#SELECTOR :  NÂNG CAO
THAM KHẢO THÊM Ở ĐÂY:https://www.w3schools.com/cssref/css_selectors.php
VIDEO  HƯỚNG DÂN : https://youtu.be/udH5y0XSd1k?si=swCIMpf3c13RivPo
     a[href^="https"]    : Lấy phần đầu  {^}
     a[href$=".pdf"]     :lấy phần chân  {$}
     a[href*="w3schools"] : lấy phần thân  {*}
     first-letter : lấy kí tự đầu tiên
     first-inline : lấy cả dòng
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#thuoc tinh:  transition (cho  phép  bạn thay  đổi màu, nền một cách trơn tru hơn)
               transition:{chiều_dài_rộng_vs_tgian}
               transition-delay
               transition-duration
               transition-property
               transition-timing-function
          vd css:
                    div {
                         width: 100px;
                         height: 100px;
                         background: red;
                         transition: width 2s;
                         }
                    div:hover {
                         width: 300px;
                         }
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#thuoc tinh  flaot , clear: hiệu  ứng thả nổi
     clear:both | right | left
     float:left|right|none
     flex: 1; /* Cho phép các cột chiếm không gian linh hoạt */
          ==> flex là tỷ lệ chiêm trong khung hinh 
     /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#thuoc tinh: transform >>>  Nó sẽ giúp vật thể đó thay đổi kích thước và không làm ảnh hưởng đến kích thước của vật thể khác.
                       >>>  Nói một cách khác thì transform có thẻ đè nền vật thể khác và không làm thay đổi của vật thể kia.
                       >>>  Ngoài ra nó cũng có thể xoay  được chiều dọc ,ngang.....

                       transform: scaleX({số_muốnthay_đổi}) >>>> X là thay  đổi chiều ngang
                                  scaleY()                  >>>> Y là thay  đổi chiều  dọc
                                  ==> Viết tắt : scale({số_muốnthay_đổi}{Số_muốnthay_đổi})
                                  rotate(45deg)             >>>>là thay  xoay chiều của vật thể đó thành 45 độ.  Ngoài ra nó có x,y,z
                                  skew(x,y)                 >>>> Nó sẽ xoay  thành hình bình hành. 
                                  translate(x, y)           >>>> Thêm  vào giữa đó  một số pixel x,y nên tính theo phần trăm  %
                                                            ==> Giống như  margin nhung nó lại  không thay  đổi vị trí của nó . Nó chỉ hiện lùi ra bên ngoài mà thôi .
                    
                    vd: css

                              tung{
                                   transform: scale(2); /// no  se tang gap  doi  kich  thuoc
                                   transform: rotate(45deg);
                                   transform: skew(20deg,10deg);
                              }
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#thuoc tinh: position >>> Nó gần giống với transform  nhưng nó lại không thay đổi thể  xoay được.
                      ==> Nó chỉ làm được thuộc tính top,  bottom,  left ,right,Nó cũng không thay đổi vật thể khác, nó chỉ ĐÈ nên vật thể khác.
                    static    : Đây là giá trị mặc định, các phần tử sẽ nằm theo thứ tự của văn bản và không thể sử dụng các thuộc tính top, bottom, left, right để điều chỉnh vị trí.
                    ==>       Static không áp dụng  cho absolute.
đc dùng nhiều->     relative  : Đây là giá trị cho phép bạn di chuyển các phần tử tương đối so với vị trí ban đầu của chúng, bằng cách sử dụng các thuộc tính top, bottom, left, right. Vị trí này không ảnh hưởng đến các phần tử xung quanh.
đc dùng nhiều->     absolute  : Đây là giá trị cho phép bạn đặt các phần tử tại một vị trí cố định trên màn hình, bằng cách sử dụng các thuộc tính top, bottom, left, right. Vị trí này sẽ phụ thuộc vào phần tử cha gần nhất có thuộc tính position khác static, hoặc cửa sổ trình duyệt nếu không có phần tử cha nào.
                    ==>       Vị trí này sẽ làm cho các phần tử bị loại bỏ khỏi luồng bố cục thông thường.
đc dùng nhiều->     fixed     : Đây là giá trị cho phép bạn đặt các phần tử tại một vị trí cố định trên màn hình, bằng cách sử dụng các thuộc tính top, bottom, left, right. Vị trí này sẽ không thay đổi khi bạn cuộn trang, và sẽ luôn dựa vào cửa sổ trình duyệt. Vị trí này cũng sẽ làm cho các phần tử bị loại bỏ khỏi luồng bố cục thông thường.
                    sticky    : Một phần tử có vị trí: dính; được định vị dựa trên vị trí cuộn của người dùng. Phần tử cố định chuyển đổi giữa tương đối và cố định, tùy thuộc vào vị trí cuộn. Nó được định vị tương đối cho đến khi gặp một vị trí bù nhất định trong khung nhìn - sau đó nó "cố định" tại chỗ (như vị trí: cố định).
                              ==> Vị trí này cho phép bạn khi  cuộn thah  nên thì nó sẽ cố định nhất định tại một vị trí nào đó.

                              vd  : css sticky:
                                   tung{
                                        position: -webkit-sticky;
                                        position: sticky;
                                        top: 0;
                                        padding: 5px;
                                        background-color: #cae8ca;
                                        border: 2px solid #4CAF50;
                                   }
                                   vd : 2css
                                   tung{
                                        position: relative; 
                                        top:10px;
                                        right:10px;
                                   }
                              ==>  Các ví dụ khác cũng phải có Position và có một trong top,  bottom,  right, left.
     ==> THAM KHẢO THÊM  Ở FILE HTML{position.html}
     Link: https://www.w3schools.com/Css/css_positioning.asp
     ###########################################################################################################
     - SỬ DỤNG  THUỘC TÍNH POSITION  VS TRANSFORM --> CĂN RA GIỮA. (CENTER)
               VD: 
                    .tung{
                         position: absolute;
                         top:50%;
                         left:50%;
                         transform:translate(-50%,-50%);
                    }
                    ==> KHI  TA SU DUNG CODE  TREN THI NO SE CAN RA  GIUA - CENTER.
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#Căn ra giữa(Center)
                    {
                         display: flex;
                         flex-direction: column;
                         position: absolute;
                    } ==>  Bổ sung thêm phần display để lấy căn chiỉnh hợp lý
                    
                    display: flex; 
                    flex-wrap: wrap; /* Cho phép các phần tử con tràn qua hàng mới khi cần */
                    justify-content: center; /* Căn chỉnh các phần tử con theo chiều ngang */
                    transform:translate(-50%,-50%);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#thuoc tinh:z-index
          Thuộc tính z-index trong CSS được sử dụng để thiết lập thứ tự xếp chồng nhau của một thành phần vị trí trên trang web.
          Thứ tự chồng nhau được sắp xếp dựa theo giá trị số, thành phần HTML nào có chỉ số z-index cao hơn sẽ nằm trên, ngược lại sẽ nằm dưới, giá trị mặc định là 01. Giá trị z-index càng cao, phần tử sẽ hiển thị trên cùng, che phần tử có giá trị z-index thấp hơn
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#thuoc tinh: before vs after: Cho phép bạn làm biện pháp CSS  trước hoặc sau nội dung hiển thị của element.
     before:  là phía trước.
     after:   là phía sau.
     VD:
          .tung:after 
          {
                content:"Viet Nam";
                font-size:50px;
                color:#f60;
                position:relative;
                z-index:99;

                &::before {
                      content:"Hello ";
                      color:#06f;
                }
          }
     ==> Đây chỉ là một phần app  dụng  before  vs  after vào ví  dụ  nó còn đc sử dụng vào nhiều trong css nhiều hơn nữa.
     link tham khao: https://www.youtube.com/watch?v=ARsb10UsfX4&list=PLd8OdiciAE1SwMCtd6XgYp-ei1or6sb1r&index=56
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
NÂNG CAO CÁC THUỘC TÍNH.
CÁC THUỘC TÍNH  CẦN LƯU Ý  KHI  DÙNG ĐỂ CÓ THỂ NHANH VIẾT CODE NAHNH HƠN LOGIC :
     inherit:  Kế thừa giá trị từ phần tử cha gần nhất
               ==>color: inherit; sẽ kế thừa màu chữ từ phần tử cha

     initial:	Đặt lại giá trị mặc định của thuộc tính (style gốc)
               ==>display: initial; sẽ đặt lại kiểu hiển thị là inline

     unset  :	Kế thừa hoặc đặt lại giá trị tùy theo kiểu thuộc tính
               ==>font-size: unset; sẽ kế thừa cỡ chữ từ phần tử cha nếu font-size là thuộc tính kế thừa, hoặc đặt lại cỡ chữ mặc định nếu font-size là thuộc tính không kế thừa

               vd:css
                         .container {
                         display: flex;
                         flex-wrap: wrap;
                         width: 80%;
                         margin: 20px auto;
                         }
                         .tung {
                         width: 25%;
                         height: 200px;
                         border: 5px solid black;
                         background-color: yellow;
                         }

                         .tung p {
                         font-size: 20px;
                         text-align: center;
                         line-height: 200px;
                         }

                         .tung.one {
                         border-color: inherit;
                         }

                         .tung.two {
                         border-color: initial;
                         }

                         .tung.three {
                         border-color: unset;
                         }
     

     currentColor:  Là một giá trị CSS đặc biệt, nó lấy giá trị của thuộc tính color của phần tử đó hoặc phần tử gần nó
               ===>NÓ SẼ KHÁC VỚI INHERIT LÀ CÓ THỂ KẾ THỪA CHÍNH NÓ.
                    VD: CSS
                         .tung{
                         color: gold; /* Màu chữ vàng */
                         border: 10px solid currentColor; /* Màu vành đai vàng */
                         box-shadow: 0px 0px 15px currentColor; /* Màu bóng đổ vàng */
                         width: 200px;
                         height: 200px;
                         border-radius: 50%;
                         }
     transparent   : Giá trị alpha của màu sắc là 0, nghĩa là không có màu sắc.

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


TÌM  HIỂU THÊM VỀ CÁCH CHIA CÁC CỘT ĐÊ LÀM CÁC SLINE  SONG SONG VỚI NHAU,  THẲNG HÀNG NHAU.

 Cach chia cot hang trong html:    
     columw        :https://www.w3schools.com/howto/howto_js_list_grid_view.asp
     gird -view     https://www.w3schools.com/css/css3_multiple_columns.asp
     display:gird  >>> Nó sẽ tự động chia kích thuốc của các ô vuôn , tam giác
     link tham khảo:  https://www.youtube.com/watch?v=hJHQVpv6-Z8

